[  0%] Built target geographic_msgs_generate_messages_cpp
[  0%] Built target geometry_msgs_generate_messages_cpp
[  0%] Built target std_msgs_generate_messages_cpp
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_SinglePayloadAction
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_GeneralInfo
[  0%] Built target sensor_msgs_generate_messages_nodejs
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_PathPlan
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_GPSRAW
[  0%] Built target sensor_msgs_generate_messages_cpp
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_ControlParameter
[  0%] Built target std_msgs_generate_messages_nodejs
[  0%] Built target geographic_msgs_generate_messages_nodejs
[  0%] Built target _outdoor_gcs_generate_messages_check_deps_MultiPayloadAction
[  0%] Built target geometry_msgs_generate_messages_nodejs
[  0%] Built target sensor_msgs_generate_messages_py
[  0%] Built target geometry_msgs_generate_messages_py
[  0%] Built target geographic_msgs_generate_messages_py
[  0%] Built target std_msgs_generate_messages_py
[  0%] Built target sensor_msgs_generate_messages_lisp
[  0%] Built target std_msgs_generate_messages_lisp
[  0%] Built target geometry_msgs_generate_messages_lisp
[  0%] Built target sensor_msgs_generate_messages_eus
[  0%] Built target geographic_msgs_generate_messages_eus
[  0%] Built target geographic_msgs_generate_messages_lisp
[  0%] Built target geometry_msgs_generate_messages_eus
[  0%] Built target std_msgs_generate_messages_eus
[ 17%] Built target outdoor_gcs_generate_messages_py
[ 43%] Built target outdoor_gcs_generate_messages_cpp
[ 43%] Built target outdoor_gcs_generate_messages_nodejs
[ 56%] Built target outdoor_gcs_generate_messages_lisp
[ 71%] Built target outdoor_gcs_generate_messages_eus
[ 73%] [34m[1mAutomatic MOC, UIC and RCC for target outdoor_gcs[0m
[ 73%] Built target outdoor_gcs_generate_messages
[ 73%] Built target outdoor_gcs_autogen
[ 76%] [34m[1mGenerating include/outdoor_gcs/moc_qnode.cpp[0m
[35m[1mScanning dependencies of target outdoor_gcs[0m
[ 78%] [32mBuilding CXX object CMakeFiles/outdoor_gcs.dir/src/main.cpp.o[0m
[ 80%] [32mBuilding CXX object CMakeFiles/outdoor_gcs.dir/src/qnode.cpp.o[0m
[ 82%] [32mBuilding CXX object CMakeFiles/outdoor_gcs.dir/src/main_window.cpp.o[0m
[ 84%] [32mBuilding CXX object CMakeFiles/outdoor_gcs.dir/include/outdoor_gcs/moc_qnode.cpp.o[0m
[ 86%] [32mBuilding CXX object CMakeFiles/outdoor_gcs.dir/include/outdoor_gcs/moc_main_window.cpp.o[0m
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:[m[K In member function â€˜[01m[Kvoid outdoor_gcs::MainWindow::updateuav()[m[Kâ€™:
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:289:47:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::w[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_w_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
         float quat[4] = {[01;35m[Kimu_data.orientation.w[m[K, imu_data.orientation.x, imu_data.orientation.y, imu_data.orientation.z};
                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:289:71:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::x[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_x_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
         float quat[4] = {imu_data.orientation.w, [01;35m[Kimu_data.orientation.x[m[K, imu_data.orientation.y, imu_data.orientation.z};
                                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:289:95:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::y[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_y_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
         float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, [01;35m[Kimu_data.orientation.y[m[K, imu_data.orientation.z};
                                                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:289:119:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::z[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_z_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
         float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, imu_data.orientation.y, [01;35m[Kimu_data.orientation.z[m[K};
                                                                                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:[m[K In member function â€˜[01m[Kvoid outdoor_gcs::MainWindow::updateInfoLogger()[m[Kâ€™:
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1287:55:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::w[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_w_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {[01;35m[Kimu_data.orientation.w[m[K, imu_data.orientation.x, imu_data.orientation.y, imu_data.orientation.z};
                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1287:79:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::x[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_x_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, [01;35m[Kimu_data.orientation.x[m[K, imu_data.orientation.y, imu_data.orientation.z};
                                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1287:103:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::y[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_y_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, [01;35m[Kimu_data.orientation.y[m[K, imu_data.orientation.z};
                                                                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1287:127:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::z[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_z_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, imu_data.orientation.y, [01;35m[Kimu_data.orientation.z[m[K};
                                                                                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1373:55:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::w[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_w_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {[01;35m[Kimu_data.orientation.w[m[K, imu_data.orientation.x, imu_data.orientation.y, imu_data.orientation.z};
                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1373:79:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::x[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_x_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, [01;35m[Kimu_data.orientation.x[m[K, imu_data.orientation.y, imu_data.orientation.z};
                                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1373:103:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::y[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_y_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, [01;35m[Kimu_data.orientation.y[m[K, imu_data.orientation.z};
                                                                                  [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/mhviolentsky/catkin_ws/src/outdoor_gcs/src/main_window.cpp:1373:127:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Kimu_data.sensor_msgs::Imu_<std::allocator<void> >::orientation.geometry_msgs::Quaternion_<std::allocator<void> >::z[m[Kâ€™ from â€˜[01m[Kgeometry_msgs::Quaternion_<std::allocator<void> >::_z_type {aka double}[m[Kâ€™ to â€˜[01m[Kfloat[m[Kâ€™ inside { } [[01;35m[K-Wnarrowing[m[K]
                 float quat[4] = {imu_data.orientation.w, imu_data.orientation.x, imu_data.orientation.y, [01;35m[Kimu_data.orientation.z[m[K};
                                                                                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~^[m[K
[ 89%] [32m[1mLinking CXX executable /home/mhviolentsky/catkin_ws/devel/.private/outdoor_gcs/lib/outdoor_gcs/outdoor_gcs[0m
[100%] Built target outdoor_gcs
